apiVersion: apps/v1
kind: Deployment
metadata:
  name: archburgers-app-deployment
spec:
  selector:
    matchLabels:
      app: archburgers-app
  replicas: 1
  template:
    metadata:
      labels:
        app: archburgers-app
    spec:
      containers:
        - name: archburgers-app-container
          image: gomesrodris/architect-burgers:0.0.7
          ports:
            - containerPort: 8090
          env:
            - name: "archburgers.datasource-mongodb.uri"
              valueFrom:
                configMapKeyRef:
                  name: "archburgers-db-access-config"
                  key: "archburgers.datasource-mongodb.uri"

            - name: "archburgers.datasource-mongodb.database"
              valueFrom:
                configMapKeyRef:
                  name: "archburgers-db-access-config"
                  key: "archburgers.datasource-mongodb.database"

            - name: "archburgers.integration.mercadopago.apiBaseUrl"
              valueFrom:
                configMapKeyRef:
                  name: "archburgers-pagamento-services-config"
                  key: "archburgers.integration.mercadopago.apiBaseUrl"
            - name: "archburgers.integration.mercadopago.userId"
              valueFrom:
                configMapKeyRef:
                  name: "archburgers-pagamento-services-config"
                  key: "archburgers.integration.mercadopago.userId"
            - name: "archburgers.integration.mercadopago.accessToken"
              valueFrom:
                configMapKeyRef:
                  name: "archburgers-pagamento-services-config"
                  key: "archburgers.integration.mercadopago.accessToken"
            - name: "archburgers.integration.mercadopago.posId"
              valueFrom:
                configMapKeyRef:
                  name: "archburgers-pagamento-services-config"
                  key: "archburgers.integration.mercadopago.posId"
            - name: "archburgers.integration.mercadopago.notificationUrl"
              valueFrom:
                configMapKeyRef:
                  name: "archburgers-pagamento-services-config"
                  key: "archburgers.integration.mercadopago.notificationUrl"

            - name: "archburgers.integration.aws.region"
              valueFrom:
                configMapKeyRef:
                  name: "archburgers-aws-config"
                  key: "archburgers.integration.aws.region"
            - name: "archburgers.integration.cognito.userPoolId"
              valueFrom:
                configMapKeyRef:
                  name: "archburgers-aws-config"
                  key: "archburgers.integration.cognito.userPoolId"
            - name: "archburgers.integration.cognito.clientId"
              valueFrom:
                configMapKeyRef:
                  name: "archburgers-aws-config"
                  key: "archburgers.integration.cognito.clientId"
            - name: "archburgers.integration.cognito.clientSecret"
              valueFrom:
                configMapKeyRef:
                  name: "archburgers-aws-config"
                  key: "archburgers.integration.cognito.clientSecret"
            - name: "archburgers.integration.sqs.pagamentosEmAbertoQueueName"
              valueFrom:
                configMapKeyRef:
                  name: "archburgers-aws-config"
                  key: "archburgers.integration.sqs.pagamentosEmAbertoQueueName"
            - name: "archburgers.integration.sqs.pagamentosEmAbertoQueueUrl"
              valueFrom:
                configMapKeyRef:
                  name: "archburgers-aws-config"
                  key: "archburgers.integration.sqs.pagamentosEmAbertoQueueUrl"
            - name: "archburgers.integration.sqs.pagamentosConcluidosQueueName"
                valueFrom:
                  configMapKeyRef:
                    name: "archburgers-aws-config"
                    key: "archburgers.integration.sqs.pagamentosConcluidosQueueName"
            - name: "archburgers.integration.sqs.pagamentosConcluidosQueueUrl"
                valueFrom:
                  configMapKeyRef:
                    name: "archburgers-aws-config"
                    key: "archburgers.integration.sqs.pagamentosConcluidosQueueUrl"
            - name: "archburgers.integration.sqs.sqsEndpoint"
                valueFrom:
                  configMapKeyRef:
                    name: "archburgers-aws-config"
                    key: "archburgers.integration.sqs.sqsEndpoint"

            # Needs to be passed via env var - Pod cannot assume role in AwsAcademy
            - name: "AWS_ACCESS_KEY_ID"
              valueFrom:
                configMapKeyRef:
                  name: "archburgers-aws-config"
                  key: "archburgers.integration.aws.AWS_ACCESS_KEY_ID"
            - name: "AWS_SECRET_ACCESS_KEY"
              valueFrom:
                configMapKeyRef:
                  name: "archburgers-aws-config"
                  key: "archburgers.integration.aws.AWS_SECRET_ACCESS_KEY"
            - name: "AWS_SESSION_TOKEN"
              valueFrom:
                configMapKeyRef:
                  name: "archburgers-aws-config"
                  key: "archburgers.integration.aws.AWS_SESSION_TOKEN"

          readinessProbe:
            httpGet:
              port: 8090
              path: /healthcheck
            initialDelaySeconds: 20
            periodSeconds: 10
            timeoutSeconds: 3
            failureThreshold: 1
          livenessProbe:
            httpGet:
              port: 8090
              path: /healthcheck
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 3
            # https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
            # A common pattern for liveness probes is to use the same low-cost HTTP endpoint as for readiness probes,
            # but with a higher failureThreshold
            failureThreshold: 5
          resources:
            requests:
              cpu: 250m


